Task:
Given the edges of a simple directed unweighted graph with N nodes and M edges,
and three nodes S, D, K, find (if there is any) the length of the shortest path
(and any one such path) from S to D such that the path goes through K.
The nodes are numbered from 1 to N.

Input:
First line contains the number of tests. The description of each test follows.
Each test is described by (M+1) lines. First line contains N, M, S, D, K. Each
of the remaining M lines contains U[i] and V[i] indicating that there is an
edge from U[i] to V[i].

Output:
For each test in the given order, if there is no path which satisfies the
conditions you are given in this task then print "-1" in one line. Otherewise,
print two lines. First line contains the length of the shortest path that you
are asked to find in this task. Second line contains the nodes of any such path
in the same order as they appear in the path.

Example-1 (batch-1):
Input (stdin):
2
5 10 5 3 5
2 5
5 1
4 5
3 5
1 2
2 4
3 2
1 4
1 3
3 4
5 4 2 5 3
5 1
3 1
2 3
2 4
Output (stdout):
2
5 1 3
-1

Example-2 (batch-2):
Input (stdin):
2
8 7 3 2 4
7 2
6 7
7 3
2 4
1 2
8 4
5 1
6 6 2 2 2
5 1
1 2
1 4
5 2
4 5
3 2
Output (stdout):
-1
0
2

Scoring:
Batch   Score   Tests   Constraints
1       0.1     2       1<=N<=10, 1<=M<=10, 1<=S<=N, 1<=D<=N, 1<=K<=N
2       0.1     2       1<=N<=10, 1<=M<=10, 1<=S<=N, 1<=D<=N, 1<=K<=N
3       0.2     20000   1<=N<=20, 1<=M<=30, 1<=S<=N, 1<=D<=N, 1<=K<=N
4       0.3     20      1<=N<=20000, 1<=M<=30000, 1<=S<=N, 1<=D<=N, 1<=K<=N
5       0.3     2       1<=N<=200000, 1<=M<=300000, 1<=S<=N, 1<=D<=N, 1<=K<=N
------------------------
5       1       Total

Time limit: 1s (cpp) or 1.5s (java) or 3s (py) per batch.

Hints:
- Use fast input/output methods.
- 0.2 score for passing only sample batches.
- O(N+M) solution is expected.