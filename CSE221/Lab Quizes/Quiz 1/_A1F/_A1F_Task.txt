Task:
Given a list of integers, try to sort it (minimize the number of pairs of
integers which are in wrong order) in non-decreasing order by doing only the
following operation as many number of times as you want: swap two adjacent
integers with the same parity (both even or both odd).
Find the final state of the list where the above mentioned operation can not
decrease the number of pairs of integers which are in wrong order any further.

Input:
First line contains the number of tests. The description of each test follows.
Each test is described by two lines. First line contains N, the number of
integers in the list. Second line contains the integers A[i] of the list.

Output:
For each test in the given order, print the integers of the list you are asked
to find in this task in one separate line.
Separate the integers of a list by spaces.

Example-1 (batch-1):
Input (stdin):
1
7
4 2 4 7 1 6 1
Output (stdout):
2 4 4 1 7 6 1

Example-2 (batch-2):
Input (stdin):
1
14
4 8 2 9 1 5 4 6 8 1 7 13 11 8
Output (stdout):
2 4 8 1 5 9 4 6 8 1 7 11 13 8

Example-3 (batch-3):
Input (stdin):
2
5
3 5 9 7 1
1
221
Output (stdout):
1 3 5 7 9
221

Scoring:
Batch   Score   Tests   Constraints
1       0.05    1       N=7, 1<=A[i]<=10
2       0.05    1       N=14, 1<=A[i]<=100
3       0.1     2       1<=N<=5, 1<=A[i]<=1000
4       0.1     100000  1<=N<=10, 1<=A[i]<=1000000
5       0.1     25000   1<=N<=20, 1<=A[i]<=1000000
6       0.1     4000    1<=N<=50, 1<=A[i]<=1000000
7       0.1     1000    1<=N<=100, 1<=A[i]<=1000000
8       0.1     250     1<=N<=200, 1<=A[i]<=1000000
9       0.1     40      1<=N<=500, 1<=A[i]<=1000000
10      0.2     10      1<=N<=1000, 1<=A[i]<=1000000
------------------------
10      1       Total

Time limit: 1s (cpp) or 2s (java) or 2s (py) per batch.

Hints:
- Use fast input/output methods.
- 0.2 score for passing only sample batches.
- O(N^2) solution is expected.