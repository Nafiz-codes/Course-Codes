Task:
Given a simple undirected weighted graph with N nodes and M edges, find (if
there is any) the length of the path with the second shortest unique length
from node 1 to node N.
The nodes are numbered from 1 to N.

Input:
First line contains the number of tests. The description of each test follows.
Each test is described by (M+1) lines. First line contains N, M, S, D. Each of
the remaining M lines contains U[i], V[i], W[i] indicating that there is an
edge between U[i] and V[i] with weight W[i].

Output:
For each test in the given order, print one integer in one line. If there is no
path which satisfies the conditions you are given in this task then the integer
is -1. Otherewise, the integer is the length of the path that you are asked to
find in this task.

Example-1 (batch-1):
Input (stdin):
2
4 3 2 3
2 1 3
2 3 5
3 4 3
6 5 3 4
1 2 3
1 4 5
1 6 2
2 6 3
4 6 1

Output (stdout):
11
-1

Example-2 (batch-2):
Input (stdin):
2
5 7 2 5
1 5 3
1 4 2
5 3 1
5 4 6
5 2 5
3 4 4
3 2 8
2 1 2 2
2 1 5
Output (stdout):
7
10

Scoring:
Batch   Score   Tests   Constraints
1       0.1     2       2<=N<=10, 1<=M<=10, 1<=W[i]<=10, 1<=S<=N, 1<=D<=N
2       0.1     2       2<=N<=10, 1<=M<=10, 1<=W[i]<=10, 1<=S<=N, 1<=D<=N
3       0.2     2000    2<=N<=20, 1<=M<=30, 1<=W[i]<=100, 1<=S<=N, 1<=D<=N
4       0.3     20      2<=N<=10000, 1<=M<=15000, 1<=W[i]<=10000, 1<=S<=N, 1<=D<=N
5       0.3     2       2<=N<=100000, 1<=M<=150000, 1<=W[i]<=1000000, 1<=S<=N, 1<=D<=N
------------------------
5       1       Total

Time limit: 1s (cpp) or 1.5s (java) or 3s (py) per batch.

Hints:
- Use fast input/output methods.
- 0.2 score for passing only sample batches.
- O((M+N)log(M+N)) solution is expected.